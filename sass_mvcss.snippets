snippet coh "Heading Comment"
// *************************************
//
//   ${1:`!p res = re.sub(r'_', '', snip.basename.title())`}
//   -> ${2:Description}
//
// *************************************$0
endsnippet

snippet coht "Heading Comment with Template"
// *************************************
//
//   ${1:`!p res = re.sub(r'_', '', snip.basename.title())`}
//   -> ${2:Description}
//
// -------------------------------------
//   Template (Haml)
// -------------------------------------
//
// .has-$3
//
// .${3:`!p res = re.sub(r'_', '', snip.basename)`}[${4:modifier}](${5:state})
//
// *************************************$0
endsnippet

snippet col "Long Comment"
// -------------------------------------
//   ${1:Title}
// -------------------------------------$0
endsnippet

snippet comp "Component Template"
// *************************************
//
//   ${1:`!p res = re.sub(r'_', '', snip.basename.title())`}
//   -> ${2:Description}
//
// -------------------------------------
//   Template (Haml)
// -------------------------------------
//
// .has-$3
//
// .${3:`!p res = re.sub(r'_', '', snip.basename)`}[${4:modifier}](${5:state})
//
//   .$3-scaffolding
//
// *************************************

// .$3

// -------------------------------------
//   Modifiers
// -------------------------------------

// .$3--modifier

// -------------------------------------
//   States
// -------------------------------------

// .$3.is-state

// -------------------------------------
//   Context
// -------------------------------------

// .has-$3

// -------------------------------------
//   Scaffolding
// -------------------------------------

// .$3-scaffolding
endsnippet

snippet con "Context Class"
.has-${1}
	${0}
endsnippet

snippet cos "Short Comment"
// ----- ${1:Title} ----- //$0
endsnippet

snippet cosd "Short Comment Description"
// -> ${1:Description}
//
// ${0:...}
//
endsnippet

snippet em "em Function"
em(${0}px)
endsnippet

snippet exi "Extend Icon"
@extend %icn
@extend %icn--${0}
endsnippet

snippet ffa "font-face Mixin"
+font-face(${1:font-family}, ${2:path}${3:, ${4:weight}, ${5:style}, ${6:asset-pipeline}})$0
endsnippet

snippet mod "Modifier Class"
.${1:`!p res = re.sub(r'_', '', snip.basename)`}--${2}
	${0}
endsnippet

snippet rt "respond-to Mixin"
+respond-to(${1})
	$0
endsnippet

snippet rts "respond-to Mixin - Small"
+respond-to($g-s)
	$0
endsnippet

snippet rtm "respond-to Mixin - Medium"
+respond-to($g-m)
	$0
endsnippet

snippet rtl "respond-to Mixin - Large"
+respond-to($g-l)
	$0
endsnippet

snippet sca "Scaffold Class"
.${1:`!p res = re.sub(r'_', '', snip.basename)`}-${2}
	${0}
endsnippet

snippet ste "State Class"
.${1:`!p res = re.sub(r'_', '', snip.basename)`}.is-${2}
	${0}
endsnippet

snippet struc "Structure Template"
// *************************************
//
//   ${1:`!p res = re.sub(r'_', '', snip.basename.title())`}
//   -> ${2:Description}
//
// -------------------------------------
//   Template (Haml)
// -------------------------------------
//
// (.has-$3)
//
// .${3:`!p res = re.sub(r'_', '', snip.basename)`}[${4:modifier}](${5:state})
//   .$3-scaffolding
//
// *************************************

// .$3

// -------------------------------------
//   Modifiers
// -------------------------------------

// .$3--modifier

// -------------------------------------
//   States
// -------------------------------------

// .$3.is-state

// -------------------------------------
//   Context
// -------------------------------------

// .has-$3

// -------------------------------------
//   Scaffolding
// -------------------------------------

// .$3-scaffolding
endsnippet

snippet vb "Base Variable" i
$b-${0}
endsnippet

snippet vbs "Base Variable - Space" i
$b-space
endsnippet

snippet vbsxs "Base Variable - Extra Small Space" i
$b-space-xs
endsnippet

snippet vbss "Base Variable - Small Space" i
$b-space-s
endsnippet

snippet vbsl "Base Variable - Large Space" i
$b-space-l
endsnippet

snippet vbsxl "Base Variable - Extra Large Space" i
$b-space-xl
endsnippet

snippet vbt "Base Variable - Transition" i
$b-transition
endsnippet

snippet vc "Color Variable" i
$c-${0}
endsnippet

snippet vcb "Color Variable - Background" i
$c-background
endsnippet

snippet vcbi "Color Variable - Background Invert" i
$c-background-invert
endsnippet

snippet vch "Color Variable - Highlight" i
$c-highlight
endsnippet

snippet vcs "Color Variable - Subdue" i
$c-subdue
endsnippet

snippet vcti "Color Variable - Text Invert" i
$c-text-invert
endsnippet
